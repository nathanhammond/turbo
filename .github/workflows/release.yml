name: Release

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      release_branch:
        description: "Git reference to commit to run release from"

jobs:
  # smoke-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: ${{ inputs.release_branch }}
  #     - uses: ./.github/actions/setup-node
  #       with:
  #         enable-corepack: false
  #     - uses: ./.github/actions/setup-go
  #       with:
  #         github-token: "${{ secrets.GITHUB_TOKEN }}"
  #     - name: Test
  #       run: pnpm -- turbo run test --filter=cli --color

  # darwin:
  #   needs: [smoke-test]
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: ${{ inputs.release_branch }}
  #     - run: git fetch origin --tags
  #     - uses: ./.github/actions/setup-node
  #       with:
  #         enable-corepack: false
  #     - uses: ./.github/actions/setup-go
  #       with:
  #         github-token: "${{ secrets.GITHUB_TOKEN }}"
  #     - name: Install GoReleaser
  #       uses: goreleaser/goreleaser-action@v3
  #       with:
  #         distribution: goreleaser-pro
  #         version: latest
  #         install-only: true
  #       env:
  #         GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
  #     - name: Build Artifacts
  #       run: cd cli && make publish-turbo-darwin
  #       env:
  #         GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: turbo-artifacts-darwin
  #         path: cli/dist-darwin

  # cross:
  #   needs: [smoke-test]
  #   runs-on: ubuntu-latest
  #   container:
  #     image: docker://ghcr.io/gsoltis/turbo-cross:v1.18.5
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: "${{ inputs.release_branch }}"
  #     - run: git fetch origin --tags
  #     - uses: ./.github/actions/setup-node
  #       with:
  #         enable-corepack: false
  #     - uses: ./.github/actions/setup-go
  #       with:
  #         github-token: "${{ secrets.GITHUB_TOKEN }}"
  #     - name: Install GoReleaser
  #       uses: goreleaser/goreleaser-action@v3
  #       with:
  #         distribution: goreleaser-pro
  #         version: latest
  #         install-only: true
  #       env:
  #         GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
  #     - name: Build Artifacts
  #       run: cd cli && make publish-turbo-cross
  #       env:
  #         GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: turbo-artifacts-cross
  #         path: cli/dist-cross

  final-publish:
    #needs: [cross, darwin]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "${{ inputs.release_branch }}"
        #   token: ${{ secrets.TURBOBOT }}
      - run: git fetch origin --tags
      - uses: ./.github/actions/setup-node
        with:
          enable-corepack: false
      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Configure git
        run: |
          git config --global user.name 'Turbobot'
          git config --global user.email 'turbobot@vercel.com'

      # - name: Install GoReleaser
      #   uses: goreleaser/goreleaser-action@v3
      #   with:
      #     distribution: goreleaser-pro
      #     version: latest
      #     install-only: true
      #   env:
      #     GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      # - name: Download Cross-compiled Artifacts
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: turbo-artifacts-cross
      #     path: cli/dist-cross

      # - name: Download Darwin Artifacts
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: turbo-artifacts-darwin
      #     path: cli/dist-darwin

      # - name: Combine Artifacts
      #   run: cd cli && mkdir -p dist-combined && cp -a dist-cross/. dist-combined/ && cp -a dist-darwin/. dist-combined/
      #   env:
      #     GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      # - name: Release
      #   run: cd cli && make publish
      #   env:
      #     GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.TURBOBOT }}
          commit-message: Merge release commit
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          branch: ${{ inputs.release_branch }}
          delete-branch: true
          title: "Merge release commit"
          body: |
            Merge release commit for ${{ inputs.release_branch }}
          reviewers: ["${{ github.actor }}", "@gsoltis"]
          draft: false
