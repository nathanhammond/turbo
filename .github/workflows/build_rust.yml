name: Build Rust Wrapper

on:
  workflow_dispatch:

jobs:
  build-native:
    name: "Build Native"
    strategy:
      fail-fast: true
      matrix:
        settings:
          - host: macos-latest
            target: "x86_64-apple-darwin"
            lib-cache-key: turbo-lib-darwin
            # build: |
            #   npm i -g "@napi-rs/cli@${NAPI_CLI_VERSION}" "turbo@${TURBO_VERSION}" && if [ ! -f $(dirname $(which yarn))/pnpm ]; then ln -s $(which yarn) $(dirname $(which yarn))/pnpm;fi
            #   turbo run build-native --cache-dir=".turbo" -- --release
            #   strip -x packages/next-swc/native/next-swc.*.node
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3

      - name: Install
        uses: actions-rs/toolchain@v1
        if: ${{ !matrix.settings.docker }}
        with:
          profile: minimal
          override: true
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          target: ${{ matrix.settings.target }}

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.settings.target }}-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ matrix.settings.target }}-cargo-index

      - name: Download Cross-compiled Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.settings.lib-cache-key }}
          path: shim/libturbo

      - name: Build
        run: cd shim && cargo build --release --platform ${{ matrix.settings.target }}
