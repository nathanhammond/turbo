name: "Turborepo CI Setup"
description: "Sets up everything for CI"
inputs:
  github-token:
    description: "Github token. You can pass secrets.GITHUB_TOKEN"
    required: true
  setup-node:
    description: "Set to false to prevent Node setup steps"
    required: false
    default: true
  go-version:
    description: "Change Go version"
    required: false
    default: "1.18"
runs:
  using: "composite"
  steps:
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.go-version }}
        cache: true
        cache-dependency-path: cli/go.sum

    - name: Set Up Protoc
      uses: arduino/setup-protoc@v1
      with:
        version: "3.x"
        repo-token: ${{ inputs.github-token }}

    - name: Set Up GRPC protobuf
      shell: bash
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.0
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0

    # Setup Node things
    - name: Setup pnpm
      uses: pnpm/action-setup@v2.2.2
      if: ${{ inputs.setup-node == 'true' }}
      with:
        version: 7.2.1

    - name: Setup Node.js
      uses: actions/setup-node@v2
      if: ${{ inputs.setup-node == 'true' }}
      with:
        node-version: 16
        cache: pnpm

    - name: Configure corepack
      if: ${{ inputs.setup-node == 'true' }}
      # Forcibly upgrade our available version of corepack.
      # The bundled version in node 16 has known issues.
      # Prepends the corepack bin dir so that it is always first.
      shell: bash
      run: |
        npm install --force --global corepack@latest
        npm config get prefix >> $GITHUB_PATH
        corepack enable

    - run: pnpm install
      shell: bash
      if: ${{ inputs.setup-node == 'true' }}
